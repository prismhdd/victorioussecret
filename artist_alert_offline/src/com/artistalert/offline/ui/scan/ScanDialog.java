/* ISSUES
 * 
 * can't overwrite export file(Could)
 * in save dialog box you have to type file name(Could)
 * document everything(Must)
 * error for empty directory(Should)
 * alphabetize artist list(Should)
 * 
 */

package com.artistalert.offline.ui.scan;

import com.artistalert.offline.tags.Reader;
import com.artistalert.offline.ui.results.ResultsDialog;
import javax.swing.JFileChooser;

/**
 * 
 * @author Charlie
 * 
 * modified to test sending data between frames
 * @author Woojoon
 * 
 */
public class ScanDialog extends javax.swing.JFrame {

	private String directory;

	private Reader reader;

	/** Creates new form scan_ui */
	public ScanDialog() {
		initComponents();
	}
	/** TEST constructor w/ directory as argument */
	public ScanDialog(String directory) {
		initComponents();
		this.directory = directory;
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		buttonChoose = new javax.swing.JButton();
		buttonScan = new javax.swing.JButton();
		buttonExit = new javax.swing.JButton();
		barProgress = new javax.swing.JProgressBar();
		labelDirectory = new javax.swing.JLabel();
		labelProgress = new javax.swing.JLabel();		

		setTitle("ArtistAlert");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		buttonChoose.setText("Choose Directory");
		buttonChoose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonChooseActionPerformed(evt);
			}
		});

		buttonScan.setText("Scan");
		buttonScan.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonScanActionPerformed(evt);
			}
		});
		
		buttonExit.setText("Exit");
		buttonExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonExitActionPerformed(evt);
			}
		});

		labelDirectory.setText("Please choose a directory");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().
								addGap(23, 23, 23).
								addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(layout.createSequentialGroup()
												.addComponent(labelProgress,javax.swing.GroupLayout.PREFERRED_SIZE,	javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)
												.addContainerGap())
												.addGroup(layout.createSequentialGroup()
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(layout.createSequentialGroup()
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup()
																						.addComponent(buttonChoose)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																						.addComponent(buttonScan)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																						.addComponent(buttonExit))
																						.addComponent(labelDirectory,javax.swing.GroupLayout.DEFAULT_SIZE,180,Short.MAX_VALUE))
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
																						.addGroup(layout.createSequentialGroup()
																								.addComponent(barProgress,javax.swing.GroupLayout.PREFERRED_SIZE,274,javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
																								.addGap(27,27,27)))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(22, 22, 22)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(buttonChoose)
								.addComponent(buttonScan)
								.addComponent(buttonExit))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(labelDirectory)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(barProgress,javax.swing.GroupLayout.PREFERRED_SIZE,30,javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(labelProgress)
								.addContainerGap(50, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void buttonChooseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonChooseActionPerformed

		JFileChooser chooser = new JFileChooser();
		chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		chooser.showOpenDialog(getParent());
		directory = chooser.getSelectedFile().getAbsolutePath();
		labelDirectory.setText("Directory: " + directory);
		reader = new Reader(directory);

	}// GEN-LAST:event_buttonChooseActionPerformed

	private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonExitActionPerformed

		System.exit(0);

	}// GEN-LAST:event_buttonExitActionPerformed

	private void buttonScanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonScanActionPerformed

		if (reader != null) {
			labelProgress.setText("Scanning " + directory);
			new Thread() {
				public void run() {
					new ResultsDialog(reader.scan(barProgress))
							.setVisible(true);
					buttonChoose.setEnabled(true);
					buttonScan.setEnabled(true);
				}
			}.start();
			buttonChoose.setEnabled(false);
			buttonScan.setEnabled(false);
			
		} else {
			labelProgress.setText("ERROR: Please choose a directory");
		}

		/**
		 * Test display - loads a UI_Result with Reader class
		 * 
		 */
		// final Reader reader = new Reader(this.directory);

	}// GEN-LAST:event_buttonScanActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {

		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ScanDialog().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JProgressBar barProgress;
	private javax.swing.JButton buttonChoose;
	private javax.swing.JButton buttonExit;
	private javax.swing.JButton buttonScan;
	private javax.swing.JLabel labelDirectory;
	private javax.swing.JLabel labelProgress;
	// End of variables declaration//GEN-END:variables

}
